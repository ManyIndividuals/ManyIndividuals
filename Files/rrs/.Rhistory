knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(kableExtra)
n1 = data.frame("Category" = c("Breeding Season Fat","Non-breeding fat", "Breeding season SMI", "Non-breeding SMI","Aviaries","Repro. success 2019","Repro. success 2020","Prop. successful 2019","Prop. successful 2020"),"Males" = c(2,20,6,18,16,8,17,0.63,0.47),
"Females" = c(12,35,24,38,9,9,13,0.22,0.54))
colnames<- c("Category", "Males", "Females")
kbl(n1, col.names = colnames,align = c("l","c","c","c","c"),caption="Table 1. Sample sizes for P1 and P2.  The *Breeding* and *Non-breeding season* categories refer to the number of individuals measured in each season. The *Reprod. success* category represents the total number of individuals in each year observed engaging in breeding behaviors. Note that the 2019 and 2020 reproductive success sample sizes include some of the same individuals that were observed in both years. Whereas, the *Prop. successful* category represents the proportion of the total individuals observed engaging in breeding behaviors in each year that held a territory containing nests (males) or fledged young (females).") %>%
kable_styling()
library(knitr)
library(kableExtra)
n1 = data.frame("Category" = c("Breeding Season Fat","Non-breeding fat", "Breeding season SMI", "Non-breeding SMI","Aviaries","Repro. success 2019","Repro. success 2020","Prop. successful 2019","Prop. successful 2020"),"Males" = as.character(c(2,20,6,18,16,8,17,0.63,0.47)),
"Females" = as.character(c(12,35,24,38,9,9,13,0.22,0.54)))
colnames<- c("Category", "Males", "Females")
kbl(n1, col.names = colnames,align = c("l","c","c","c","c"),caption="Table 1. Sample sizes for P1 and P2.  The *Breeding* and *Non-breeding season* categories refer to the number of individuals measured in each season. The *Reprod. success* category represents the total number of individuals in each year observed engaging in breeding behaviors. Note that the 2019 and 2020 reproductive success sample sizes include some of the same individuals that were observed in both years. Whereas, the *Prop. successful* category represents the proportion of the total individuals observed engaging in breeding behaviors in each year that held a territory containing nests (males) or fledged young (females).") %>%
kable_styling()
#Logistic exposure model, where “Exposure” is the number of days between nest checks
#Created by Ben Bolker: https://rpubs.com/bbolker/logregexp
## First run code for the exposure link function
library(MASS)
logexp <- function(exposure = 1) {
## hack to help with visualization, post-prediction etc etc
get_exposure <- function() {
if (exists("..exposure", env=.GlobalEnv))
return(get("..exposure", envir=.GlobalEnv))
exposure
}
linkfun <- function(mu) qlogis(mu^(1/get_exposure()))
## FIXME: is there some trick we can play here to allow
##   evaluation in the context of the 'data' argument?
linkinv <- function(eta) plogis(eta)^get_exposure()
logit_mu_eta <- function(eta) {
ifelse(abs(eta)>30,.Machine$double.eps,
exp(eta)/(1+exp(eta))^2)
}
mu.eta <- function(eta) {
get_exposure() * plogis(eta)^(get_exposure()-1) *
logit_mu_eta(eta)
}
valideta <- function(eta) TRUE
link <- paste("logexp(", deparse(substitute(exposure)), ")",
sep="")
structure(list(linkfun = linkfun, linkinv = linkinv,
mu.eta = mu.eta, valideta = valideta,
name = link),
class = "link-glm")
}
d <- read.csv(url("https://raw.githubusercontent.com/corinalogan/grackles/master/Files/Preregistrations/gcondition_p2_logexpdata.csv"), header=T, sep=",", stringsAsFactors=F)
rs3 = na.omit(d) # remove NAs in fat score values
exp3 <- glmer(Fate ~ FatScore + Body2 + DayofYear2 + Aviary + (1|MothersID), #+ (1|Year),
family=binomial(link=logexp(rs3$Interval)),
data = rs3)
library(lme4)
#Logistic exposure model, where “Exposure” is the number of days between nest checks
#Created by Ben Bolker: https://rpubs.com/bbolker/logregexp
## First run code for the exposure link function
library(MASS)
logexp <- function(exposure = 1) {
## hack to help with visualization, post-prediction etc etc
get_exposure <- function() {
if (exists("..exposure", env=.GlobalEnv))
return(get("..exposure", envir=.GlobalEnv))
exposure
}
linkfun <- function(mu) qlogis(mu^(1/get_exposure()))
## FIXME: is there some trick we can play here to allow
##   evaluation in the context of the 'data' argument?
linkinv <- function(eta) plogis(eta)^get_exposure()
logit_mu_eta <- function(eta) {
ifelse(abs(eta)>30,.Machine$double.eps,
exp(eta)/(1+exp(eta))^2)
}
mu.eta <- function(eta) {
get_exposure() * plogis(eta)^(get_exposure()-1) *
logit_mu_eta(eta)
}
valideta <- function(eta) TRUE
link <- paste("logexp(", deparse(substitute(exposure)), ")",
sep="")
structure(list(linkfun = linkfun, linkinv = linkinv,
mu.eta = mu.eta, valideta = valideta,
name = link),
class = "link-glm")
}
d <- read.csv(url("https://raw.githubusercontent.com/corinalogan/grackles/master/Files/Preregistrations/gcondition_p2_logexpdata.csv"), header=T, sep=",", stringsAsFactors=F)
rs3 = na.omit(d) # remove NAs in fat score values
exp3 <- glmer(Fate ~ FatScore + Body2 + DayofYear2 + Aviary + (1|MothersID), #+ (1|Year),
family=binomial(link=logexp(rs3$Interval)),
data = rs3)
#summary(exp3)
library(kableExtra)
ple = data.frame("Parameter" = c("Intercept","Fat score", "SMI","Day of year","Aviary"),"Estimate (SE)" = c("1.99 (0.40)","0.91 (0.49)","-0.69 (0.31)","-0.21 (0.15)","-0.47 (0.61)"), "OR (CI)" = c("7.32 (3.3-16.0)","0.50 (0.27-0.92)","2.48 (0.95-6.49)","0.63 (0.19-2.10)","0.81 (0.60-1.10)"), "p-value" = c("<0.001",0.06,"0.03*",0.16,0.44))
colnames<- c("Parameter", "Estimate (SE)", "OR (CI)", "p-value")
kbl(ple, col.names = colnames,align = c("l","c","c","c"),caption="Table 4. Results of the logistic exposure model showing the relationship between the probability of daily nest survival and scaled mass index (SMI), fat score, the amount of time spent in the aviaries, and the day of the year. Parameter estimates are presented with the standard error in parentheses. Odds ratios (OR) represent the exponentiated estimates, and are presented to increase interpretability with 95% confidence intervals in parentheses.") %>%
kable_styling()
library(ggplot2)
library(visreg)
library(sjPlot)
library(bayestestR)
set_theme(base = theme_classic())
p = plot_model(exp3, show.values = T, title = "Probability of daily nest survival",axis.title = "Odds ratio",
axis.labels = c("Aviary","Day of year","SMI","Fat score"),
dot.size = 3,line.size = 1.5,vline.color = "black")
p + font_size(title =  16, axis_title.x = 14, labels.x = 12, labels.y= 12)
